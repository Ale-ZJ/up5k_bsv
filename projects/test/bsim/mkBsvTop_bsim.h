/*
 * Generated by Bluespec Compiler (build 629c10a)
 * 
 * On Sat Jul  3 01:51:09 UTC 2021
 * 
 */

/* Generation options: */
#ifndef __mkBsvTop_bsim_h__
#define __mkBsvTop_bsim_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkBsvTop_bsim module */
class MOD_mkBsvTop_bsim : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Fifo<tUInt64> INST_hwmain_floatAdder_calcQ;
  MOD_Fifo<tUInt64> INST_hwmain_floatAdder_inProcQ;
  MOD_Fifo<tUInt64> INST_hwmain_floatAdder_inQ;
  MOD_Fifo<tUInt32> INST_hwmain_floatAdder_normalizeQ;
  MOD_Fifo<tUInt32> INST_hwmain_floatAdder_normalizeQ1;
  MOD_Fifo<tUInt32> INST_hwmain_floatAdder_normalizeQ2;
  MOD_Fifo<tUInt32> INST_hwmain_floatAdder_normalizeQ3;
  MOD_Fifo<tUInt32> INST_hwmain_floatAdder_normalizeQ4;
  MOD_Fifo<tUInt32> INST_hwmain_floatAdder_outQ;
  MOD_Fifo<tUInt32> INST_hwmain_floatMultiplier_multQ;
  MOD_Fifo<tUInt32> INST_hwmain_floatMultiplier_outQ;
  MOD_Fifo<tUInt32> INST_hwmain_floatMultiplier_signExpZeroQ;
  MOD_Fifo<tUInt32> INST_hwmain_floatingQ;
  MOD_Reg<tUInt32> INST_hwmain_inputBuffer;
  MOD_Reg<tUInt8> INST_hwmain_inputBufferCnt;
  MOD_Reg<tUInt32> INST_hwmain_outputBuffer;
  MOD_Reg<tUInt8> INST_hwmain_outputBufferCnt;
  MOD_Fifo<tUInt32> INST_hwmain_ram_outQ;
  MOD_RegFile<tUInt32,tUInt32> INST_hwmain_ram_ram;
  MOD_Wire<tUInt64> INST_hwmain_ram_reqWire;
  MOD_Fifo<tUInt8> INST_hwmain_relayUartInQ;
  MOD_Fifo<tUInt8> INST_hwmain_relayUartOutQ;
  MOD_Reg<tUInt8> INST_initialized;
  MOD_Fifo<tUInt8> INST_uart_inQ;
  MOD_Reg<tUInt8> INST_uart_inReqId;
  MOD_Reg<tUInt8> INST_uart_outCnt;
  MOD_Fifo<tUInt8> INST_uart_outQ;
 
 /* Constructor */
 public:
  MOD_mkBsvTop_bsim(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_x__h4144;
  tUInt8 DEF_x__h4112;
  tUInt8 DEF_hwmain_outputBufferCnt_28_EQ_0___d229;
  tUInt8 DEF_hwmain_inputBufferCnt_99_EQ_3___d200;
 
 /* Local definitions */
 private:
  tUInt32 DEF_v__h303;
 
 /* Rules */
 public:
  void RL_uart_relayOut();
  void RL_uart_relayIn();
  void RL_hwmain_floatMultiplier_procMultResult();
  void RL_hwmain_floatAdder_procIn();
  void RL_hwmain_floatAdder_calcFrac();
  void RL_hwmain_floatAdder_calcFrac2();
  void RL_hwmain_floatAdder_normalize();
  void RL_hwmain_floatAdder_normalize1();
  void RL_hwmain_floatAdder_normalize2();
  void RL_hwmain_floatAdder_normalize3();
  void RL_hwmain_floatAdder_normalize4();
  void RL_hwmain_ttt();
  void RL_hwmain_readFloat();
  void RL_hwmain_writeFloat();
  void RL_doinit();
  void RL_relayUartIn();
  void RL_relayUartOut();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBsvTop_bsim &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkBsvTop_bsim &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkBsvTop_bsim &backing);
};

#endif /* ifndef __mkBsvTop_bsim_h__ */
