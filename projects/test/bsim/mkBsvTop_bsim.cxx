/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Tue May 19 23:26:45 PDT 2020
 * 
 */
#include "bluesim_primitives.h"
#include "mkBsvTop_bsim.h"
#include "imported_BDPI_functions.h"


/* String declarations */
static std::string const __str_literal_1("uartIn %d\n", 10u);
static std::string const __str_literal_2("uartOut %d\n", 11u);


/* Constructor */
MOD_mkBsvTop_bsim::MOD_mkBsvTop_bsim(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_hwmain_ram_delayQ(simHdl, "hwmain_ram_delayQ", this, 16u, 2u, 1u, 0u),
    INST_hwmain_ram_inCnt(simHdl, "hwmain_ram_inCnt", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_hwmain_ram_outCnt(simHdl, "hwmain_ram_outCnt", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_hwmain_ram_outQ(simHdl, "hwmain_ram_outQ", this, 16u, 2u, 1u, 0u),
    INST_hwmain_ram_ram(simHdl, "hwmain_ram_ram", this, 14u, 16u, 0u, 16383u),
    INST_hwmain_ram_readCnt(simHdl, "hwmain_ram_readCnt", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_hwmain_relayUart(simHdl, "hwmain_relayUart", this, 8u, 2u, 1u, 0u),
    INST_initialized(simHdl, "initialized", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_uart_inQ(simHdl, "uart_inQ", this, 8u, 2u, 1u, 0u),
    INST_uart_inReqId(simHdl, "uart_inReqId", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_uart_outCnt(simHdl, "uart_outCnt", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_uart_outQ(simHdl, "uart_outQ", this, 8u, 2u, 1u, 0u),
    PORT_RST_N((tUInt8)1u),
    DEF_v__h320(2863311530u)
{
  symbol_count = 22u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkBsvTop_bsim::init_symbols_0()
{
  init_symbol(&symbols[0u], "_read__h668", SYM_DEF, &DEF__read__h668, 2u);
  init_symbol(&symbols[1u], "_read__h760", SYM_DEF, &DEF__read__h760, 2u);
  init_symbol(&symbols[2u], "hwmain_ram_delayQ", SYM_MODULE, &INST_hwmain_ram_delayQ);
  init_symbol(&symbols[3u], "hwmain_ram_inCnt", SYM_MODULE, &INST_hwmain_ram_inCnt);
  init_symbol(&symbols[4u], "hwmain_ram_outCnt", SYM_MODULE, &INST_hwmain_ram_outCnt);
  init_symbol(&symbols[5u], "hwmain_ram_outQ", SYM_MODULE, &INST_hwmain_ram_outQ);
  init_symbol(&symbols[6u], "hwmain_ram_ram", SYM_MODULE, &INST_hwmain_ram_ram);
  init_symbol(&symbols[7u], "hwmain_ram_readCnt", SYM_MODULE, &INST_hwmain_ram_readCnt);
  init_symbol(&symbols[8u], "hwmain_relayUart", SYM_MODULE, &INST_hwmain_relayUart);
  init_symbol(&symbols[9u], "initialized", SYM_MODULE, &INST_initialized);
  init_symbol(&symbols[10u], "RL_doinit", SYM_RULE);
  init_symbol(&symbols[11u], "RL_hwmain_ram_dodelay", SYM_RULE);
  init_symbol(&symbols[12u], "RL_hwmain_ttt", SYM_RULE);
  init_symbol(&symbols[13u], "RL_relayUartIn", SYM_RULE);
  init_symbol(&symbols[14u], "RL_relayUartOut", SYM_RULE);
  init_symbol(&symbols[15u], "RL_uart_relayIn", SYM_RULE);
  init_symbol(&symbols[16u], "RL_uart_relayOut", SYM_RULE);
  init_symbol(&symbols[17u], "uart_inQ", SYM_MODULE, &INST_uart_inQ);
  init_symbol(&symbols[18u], "uart_inReqId", SYM_MODULE, &INST_uart_inReqId);
  init_symbol(&symbols[19u], "uart_outCnt", SYM_MODULE, &INST_uart_outCnt);
  init_symbol(&symbols[20u], "uart_outQ", SYM_MODULE, &INST_uart_outQ);
  init_symbol(&symbols[21u], "v__h1457", SYM_DEF, &DEF_v__h1457, 8u);
}


/* Rule actions */

void MOD_mkBsvTop_bsim::RL_uart_relayOut()
{
  tUInt8 DEF_x__h370;
  tUInt8 DEF_TASK_bdpiUartGet_BITS_15_TO_8_EQ_0___d5;
  tUInt8 DEF_data__h337;
  tUInt8 DEF_flg__h338;
  tUInt8 DEF_x__h395;
  DEF_x__h395 = INST_uart_inReqId.METH_read();
  DEF_x__h370 = (tUInt8)255u & (DEF_x__h395 + (tUInt8)1u);
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_v__h320 = bdpiUartGet(DEF_x__h395);
  DEF_flg__h338 = (tUInt8)((tUInt8)255u & (DEF_v__h320 >> 8u));
  DEF_data__h337 = (tUInt8)((tUInt8)255u & DEF_v__h320);
  DEF_TASK_bdpiUartGet_BITS_15_TO_8_EQ_0___d5 = DEF_flg__h338 == (tUInt8)0u;
  if (DEF_TASK_bdpiUartGet_BITS_15_TO_8_EQ_0___d5)
    INST_uart_inReqId.METH_write(DEF_x__h370);
  if (DEF_TASK_bdpiUartGet_BITS_15_TO_8_EQ_0___d5)
    INST_uart_outQ.METH_enq(DEF_data__h337);
}

void MOD_mkBsvTop_bsim::RL_uart_relayIn()
{
  tUInt32 DEF__0_CONCAT_uart_outCnt_CONCAT_uart_inQ_first__1___d12;
  tUInt8 DEF_x__h463;
  tUInt8 DEF_d__h450;
  tUInt8 DEF_x__h473;
  DEF_x__h473 = INST_uart_outCnt.METH_read();
  DEF_d__h450 = INST_uart_inQ.METH_first();
  DEF_x__h463 = (tUInt8)255u & (DEF_x__h473 + (tUInt8)1u);
  DEF__0_CONCAT_uart_outCnt_CONCAT_uart_inQ_first__1___d12 = (((tUInt32)(DEF_x__h473)) << 8u) | (tUInt32)(DEF_d__h450);
  INST_uart_inQ.METH_deq();
  INST_uart_outCnt.METH_write(DEF_x__h463);
  if (!(PORT_RST_N == (tUInt8)0u))
    bdpiUartPut(DEF__0_CONCAT_uart_outCnt_CONCAT_uart_inQ_first__1___d12);
}

void MOD_mkBsvTop_bsim::RL_hwmain_ram_dodelay()
{
  tUInt32 DEF_x__h1107;
  DEF_x__h1107 = INST_hwmain_ram_delayQ.METH_first();
  INST_hwmain_ram_delayQ.METH_deq();
  INST_hwmain_ram_outQ.METH_enq(DEF_x__h1107);
}

void MOD_mkBsvTop_bsim::RL_hwmain_ttt()
{
  tUInt8 DEF_x__h1285;
  tUInt8 DEF_x__h1307;
  tUInt32 DEF_v__h1237;
  DEF_v__h1237 = INST_hwmain_ram_outQ.METH_first();
  DEF__read__h760 = INST_hwmain_ram_outCnt.METH_read();
  DEF_x__h1307 = (tUInt8)((tUInt8)255u & DEF_v__h1237);
  DEF_x__h1285 = (tUInt8)3u & (DEF__read__h760 + (tUInt8)1u);
  INST_hwmain_ram_outQ.METH_deq();
  INST_hwmain_ram_outCnt.METH_write(DEF_x__h1285);
  INST_hwmain_relayUart.METH_enq(DEF_x__h1307);
}

void MOD_mkBsvTop_bsim::RL_doinit()
{
  INST_initialized.METH_write((tUInt8)1u);
  if (!(PORT_RST_N == (tUInt8)0u))
    bdpiSwInit();
}

void MOD_mkBsvTop_bsim::RL_relayUartIn()
{
  tUInt32 DEF_x__h1599;
  tUInt8 DEF_x__h2193;
  tUInt8 DEF_NOT_uart_outQ_first__0_BIT_0_1___d40;
  tUInt8 DEF_v_BITS_7_TO_1___h1624;
  tUInt32 DEF_addr__h1596;
  tUInt32 DEF_x__h2209;
  DEF_v__h1457 = INST_uart_outQ.METH_first();
  DEF__read__h668 = INST_hwmain_ram_inCnt.METH_read();
  DEF_v_BITS_7_TO_1___h1624 = (tUInt8)(DEF_v__h1457 >> 1u);
  DEF_addr__h1596 = 16383u & ((((tUInt32)((tUInt8)0u)) << 7u) | (tUInt32)(DEF_v_BITS_7_TO_1___h1624));
  DEF_x__h2209 = INST_hwmain_ram_ram.METH_sub(DEF_addr__h1596);
  DEF_uart_outQ_first__0_BIT_0___d31 = (tUInt8)((tUInt8)1u & DEF_v__h1457);
  DEF_NOT_uart_outQ_first__0_BIT_0_1___d40 = !DEF_uart_outQ_first__0_BIT_0___d31;
  DEF_x__h2193 = (tUInt8)3u & (DEF__read__h668 + (tUInt8)1u);
  DEF_x__h1599 = 65535u & ((((tUInt32)((tUInt8)0u)) << 8u) | (tUInt32)(DEF_v__h1457));
  INST_uart_outQ.METH_deq();
  INST_hwmain_relayUart.METH_enq(DEF_v__h1457);
  if (DEF_uart_outQ_first__0_BIT_0___d31)
    INST_hwmain_ram_ram.METH_upd(DEF_addr__h1596, DEF_x__h1599);
  if (DEF_NOT_uart_outQ_first__0_BIT_0_1___d40)
    INST_hwmain_ram_inCnt.METH_write(DEF_x__h2193);
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_write(sim_hdl, this, "s,8", &__str_literal_1, DEF_v__h1457);
  if (DEF_NOT_uart_outQ_first__0_BIT_0_1___d40)
    INST_hwmain_ram_delayQ.METH_enq(DEF_x__h2209);
}

void MOD_mkBsvTop_bsim::RL_relayUartOut()
{
  tUInt8 DEF_d__h2312;
  DEF_d__h2312 = INST_hwmain_relayUart.METH_first();
  INST_hwmain_relayUart.METH_deq();
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_write(sim_hdl, this, "s,8", &__str_literal_2, DEF_d__h2312);
  INST_uart_inQ.METH_enq(DEF_d__h2312);
}


/* Methods */


/* Reset routines */

void MOD_mkBsvTop_bsim::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_uart_outQ.reset_RST(ARG_rst_in);
  INST_uart_outCnt.reset_RST(ARG_rst_in);
  INST_uart_inReqId.reset_RST(ARG_rst_in);
  INST_uart_inQ.reset_RST(ARG_rst_in);
  INST_initialized.reset_RST(ARG_rst_in);
  INST_hwmain_relayUart.reset_RST(ARG_rst_in);
  INST_hwmain_ram_readCnt.reset_RST(ARG_rst_in);
  INST_hwmain_ram_outQ.reset_RST(ARG_rst_in);
  INST_hwmain_ram_outCnt.reset_RST(ARG_rst_in);
  INST_hwmain_ram_inCnt.reset_RST(ARG_rst_in);
  INST_hwmain_ram_delayQ.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkBsvTop_bsim::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkBsvTop_bsim::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_hwmain_ram_delayQ.dump_state(indent + 2u);
  INST_hwmain_ram_inCnt.dump_state(indent + 2u);
  INST_hwmain_ram_outCnt.dump_state(indent + 2u);
  INST_hwmain_ram_outQ.dump_state(indent + 2u);
  INST_hwmain_ram_ram.dump_state(indent + 2u);
  INST_hwmain_ram_readCnt.dump_state(indent + 2u);
  INST_hwmain_relayUart.dump_state(indent + 2u);
  INST_initialized.dump_state(indent + 2u);
  INST_uart_inQ.dump_state(indent + 2u);
  INST_uart_inReqId.dump_state(indent + 2u);
  INST_uart_outCnt.dump_state(indent + 2u);
  INST_uart_outQ.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkBsvTop_bsim::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 18u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h668", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h760", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "uart_outQ_first__0_BIT_0___d31", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h1457", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h320", 32u);
  num = INST_hwmain_ram_delayQ.dump_VCD_defs(num);
  num = INST_hwmain_ram_inCnt.dump_VCD_defs(num);
  num = INST_hwmain_ram_outCnt.dump_VCD_defs(num);
  num = INST_hwmain_ram_outQ.dump_VCD_defs(num);
  num = INST_hwmain_ram_ram.dump_VCD_defs(num);
  num = INST_hwmain_ram_readCnt.dump_VCD_defs(num);
  num = INST_hwmain_relayUart.dump_VCD_defs(num);
  num = INST_initialized.dump_VCD_defs(num);
  num = INST_uart_inQ.dump_VCD_defs(num);
  num = INST_uart_inReqId.dump_VCD_defs(num);
  num = INST_uart_outCnt.dump_VCD_defs(num);
  num = INST_uart_outQ.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkBsvTop_bsim::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBsvTop_bsim &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkBsvTop_bsim::vcd_defs(tVCDDumpType dt, MOD_mkBsvTop_bsim &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 32u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__read__h668) != DEF__read__h668)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h668, 2u);
	backing.DEF__read__h668 = DEF__read__h668;
      }
      ++num;
      if ((backing.DEF__read__h760) != DEF__read__h760)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h760, 2u);
	backing.DEF__read__h760 = DEF__read__h760;
      }
      ++num;
      if ((backing.DEF_uart_outQ_first__0_BIT_0___d31) != DEF_uart_outQ_first__0_BIT_0___d31)
      {
	vcd_write_val(sim_hdl, num, DEF_uart_outQ_first__0_BIT_0___d31, 1u);
	backing.DEF_uart_outQ_first__0_BIT_0___d31 = DEF_uart_outQ_first__0_BIT_0___d31;
      }
      ++num;
      if ((backing.DEF_v__h1457) != DEF_v__h1457)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h1457, 8u);
	backing.DEF_v__h1457 = DEF_v__h1457;
      }
      ++num;
      if ((backing.DEF_v__h320) != DEF_v__h320)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h320, 32u);
	backing.DEF_v__h320 = DEF_v__h320;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__read__h668, 2u);
      backing.DEF__read__h668 = DEF__read__h668;
      vcd_write_val(sim_hdl, num++, DEF__read__h760, 2u);
      backing.DEF__read__h760 = DEF__read__h760;
      vcd_write_val(sim_hdl, num++, DEF_uart_outQ_first__0_BIT_0___d31, 1u);
      backing.DEF_uart_outQ_first__0_BIT_0___d31 = DEF_uart_outQ_first__0_BIT_0___d31;
      vcd_write_val(sim_hdl, num++, DEF_v__h1457, 8u);
      backing.DEF_v__h1457 = DEF_v__h1457;
      vcd_write_val(sim_hdl, num++, DEF_v__h320, 32u);
      backing.DEF_v__h320 = DEF_v__h320;
    }
}

void MOD_mkBsvTop_bsim::vcd_prims(tVCDDumpType dt, MOD_mkBsvTop_bsim &backing)
{
  INST_hwmain_ram_delayQ.dump_VCD(dt, backing.INST_hwmain_ram_delayQ);
  INST_hwmain_ram_inCnt.dump_VCD(dt, backing.INST_hwmain_ram_inCnt);
  INST_hwmain_ram_outCnt.dump_VCD(dt, backing.INST_hwmain_ram_outCnt);
  INST_hwmain_ram_outQ.dump_VCD(dt, backing.INST_hwmain_ram_outQ);
  INST_hwmain_ram_ram.dump_VCD(dt, backing.INST_hwmain_ram_ram);
  INST_hwmain_ram_readCnt.dump_VCD(dt, backing.INST_hwmain_ram_readCnt);
  INST_hwmain_relayUart.dump_VCD(dt, backing.INST_hwmain_relayUart);
  INST_initialized.dump_VCD(dt, backing.INST_initialized);
  INST_uart_inQ.dump_VCD(dt, backing.INST_uart_inQ);
  INST_uart_inReqId.dump_VCD(dt, backing.INST_uart_inReqId);
  INST_uart_outCnt.dump_VCD(dt, backing.INST_uart_outCnt);
  INST_uart_outQ.dump_VCD(dt, backing.INST_uart_outQ);
}
