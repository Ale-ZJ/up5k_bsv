/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Tue May 19 15:33:31 PDT 2020
 * 
 */

/* Generation options: */
#ifndef __mkBsvTop_bsim_h__
#define __mkBsvTop_bsim_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkProcessor.h"


/* Class declaration for the mkBsvTop_bsim module */
class MOD_mkBsvTop_bsim : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_BRAM<tUInt32,tUInt32,tUInt8> INST_hwmain_mem_memory;
  MOD_Reg<tUInt8> INST_hwmain_mem_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterA_cnt_3;
  MOD_Fifo<tUInt32> INST_hwmain_mem_serverAdapterA_outDataCore;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterA_outData_deqCalled;
  MOD_Wire<tUInt32> INST_hwmain_mem_serverAdapterA_outData_enqData;
  MOD_Wire<tUInt32> INST_hwmain_mem_serverAdapterA_outData_outData;
  MOD_Reg<tUInt8> INST_hwmain_mem_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_hwmain_mem_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterB_cnt_3;
  MOD_Fifo<tUInt32> INST_hwmain_mem_serverAdapterB_outDataCore;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterB_outData_deqCalled;
  MOD_Wire<tUInt32> INST_hwmain_mem_serverAdapterB_outData_enqData;
  MOD_Wire<tUInt32> INST_hwmain_mem_serverAdapterB_outData_outData;
  MOD_Reg<tUInt8> INST_hwmain_mem_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_hwmain_mem_serverAdapterB_writeWithResp;
  MOD_mkProcessor INST_hwmain_proc;
  MOD_Fifo<tUInt8> INST_hwmain_relayUart;
  MOD_Reg<tUInt8> INST_initialized;
  MOD_Fifo<tUInt8> INST_uart_inQ;
  MOD_Reg<tUInt8> INST_uart_inReqId;
  MOD_Reg<tUInt8> INST_uart_outCnt;
  MOD_Fifo<tUInt8> INST_uart_outQ;
 
 /* Constructor */
 public:
  MOD_mkBsvTop_bsim(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_b__h2891;
  tUInt8 DEF_b__h1484;
  tUInt8 DEF_hwmain_mem_serverAdapterB_s1___d121;
  tUInt8 DEF_hwmain_mem_serverAdapterA_s1___d62;
  tUInt8 DEF_hwmain_mem_serverAdapterB_cnt_3_whas____d94;
  tUInt8 DEF_hwmain_mem_serverAdapterB_cnt_2_whas____d92;
  tUInt8 DEF_hwmain_mem_serverAdapterB_cnt_1_whas____d91;
  tUInt8 DEF_hwmain_mem_serverAdapterA_cnt_3_whas____d35;
  tUInt8 DEF_hwmain_mem_serverAdapterA_cnt_2_whas____d33;
  tUInt8 DEF_hwmain_mem_serverAdapterA_cnt_1_whas____d32;
  tUInt8 DEF_hwmain_mem_serverAdapterB_s1_21_BIT_0___d122;
  tUInt8 DEF_hwmain_mem_serverAdapterA_s1_2_BIT_0___d63;
 
 /* Local definitions */
 private:
  tUInt32 DEF_v__h320;
  tUWide DEF_hwmain_proc_memReq___d134;
  tUInt32 DEF_x__h2493;
  tUInt32 DEF_x__h1086;
 
 /* Rules */
 public:
  void RL_uart_relayOut();
  void RL_uart_relayIn();
  void RL_hwmain_mem_serverAdapterA_outData_setFirstCore();
  void RL_hwmain_mem_serverAdapterA_outData_setFirstEnq();
  void RL_hwmain_mem_serverAdapterA_outData_enqOnly();
  void RL_hwmain_mem_serverAdapterA_outData_deqOnly();
  void RL_hwmain_mem_serverAdapterA_outData_enqAndDeq();
  void RL_hwmain_mem_serverAdapterA_cnt_finalAdd();
  void RL_hwmain_mem_serverAdapterA_s1__dreg_update();
  void RL_hwmain_mem_serverAdapterA_stageReadResponseAlways();
  void RL_hwmain_mem_serverAdapterA_moveToOutFIFO();
  void RL_hwmain_mem_serverAdapterA_overRun();
  void RL_hwmain_mem_serverAdapterB_outData_setFirstCore();
  void RL_hwmain_mem_serverAdapterB_outData_setFirstEnq();
  void RL_hwmain_mem_serverAdapterB_outData_enqOnly();
  void RL_hwmain_mem_serverAdapterB_outData_deqOnly();
  void RL_hwmain_mem_serverAdapterB_outData_enqAndDeq();
  void RL_hwmain_mem_serverAdapterB_cnt_finalAdd();
  void RL_hwmain_mem_serverAdapterB_s1__dreg_update();
  void RL_hwmain_mem_serverAdapterB_stageReadResponseAlways();
  void RL_hwmain_mem_serverAdapterB_moveToOutFIFO();
  void RL_hwmain_mem_serverAdapterB_overRun();
  void RL_hwmain_rpReq();
  void RL_hwmain_rpResp();
  void RL_doinit();
  void RL_relayUartIn();
  void RL_relayUartOut();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBsvTop_bsim &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkBsvTop_bsim &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkBsvTop_bsim &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkBsvTop_bsim &backing);
};

#endif /* ifndef __mkBsvTop_bsim_h__ */
